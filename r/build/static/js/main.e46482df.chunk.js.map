{"version":3,"sources":["components/ProductsList.js","components/Product.js","components/Cart.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["ProductsList","state","arr","fetch","then","res","json","setState","this","map","x","style","width","key","_id","className","src","img","height","alt","brand","model","color","price","to","Component","Product","phoneObj","addToCart","id","props","match","params","method","response","console","log","display","justifyContent","padding","description","textAlign","type","onClick","Cart","total","deleteFromCart","componentDidMount","updateQuantity","value","body","JSON","stringify","quantity","headers","reduce","scope","onChange","e","target","min","bind","disabled","Container","path","exact","component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uPA6CeA,E,2MAzCbC,MAAQ,CACNC,IAAK,I,mFAGc,IAAD,OAClBC,MAAM,0CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAF,GAAG,OAAI,EAAKK,SAAS,CAAEL,a,+BAI/B,OACE,kBAAC,WAAD,KACGM,KAAKP,MAAMC,IAAIO,KAAI,SAAAC,GAAC,OACnB,yBAAKC,MAAO,CAAEC,MAAO,SAAWC,IAAKH,EAAEI,KACrC,yBAAKC,UAAU,2BACb,yBACEC,IAAKN,EAAEO,IACPF,UAAU,eACVJ,MAAO,CAAEO,OAAQ,SACjBC,IAAI,aAEN,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,cACXL,EAAEU,MADL,IACaV,EAAEW,OAEf,uBAAGN,UAAU,aAAb,UAAiCL,EAAEY,OACnC,uBAAGP,UAAU,aAAb,UAAiCL,EAAEa,MAAnC,MAEA,kBAAC,IAAD,CAAMC,GAAE,mBAAcd,EAAEI,KAAOD,IAAKH,EAAEI,KACpC,yBAAKC,UAAU,mBAAf,2B,GA/BSU,aCoEZC,E,2MAnEbzB,MAAQ,CACN0B,SAAU,I,EAGZC,UAAY,WAAO,IACTC,EAAO,EAAKC,MAAMC,MAAMC,OAAxBH,GACR1B,MAAM,uCAAD,OAAwC0B,GAAM,CACjDI,OAAQ,SAEP7B,MAAK,SAAA8B,GAAQ,OAAIA,EAAS5B,UAC1BF,MAAK,SAAAE,GAAI,OAAI6B,QAAQC,IAAI9B,O,mFAGT,IAAD,OACVuB,EAAOrB,KAAKsB,MAAMC,MAAMC,OAAxBH,GACR1B,MAAM,sCAAD,OAAuC0B,IACzCzB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAuB,GAAQ,OAAI,EAAKpB,SAAS,CAAEoB,kB,+BAIpC,OACE,kBAAC,WAAD,KACE,yBAAKhB,MAAO,CAAE0B,QAAS,OAAQC,eAAe,eAAgB1B,MAAO,SAEjE,yBAAKG,UAAU,cACb,yBAAKA,UAAU,iCACb,yBACEA,UAAU,eACVC,IAAKR,KAAKP,MAAM0B,SAASV,IACzBE,IAAI,GACJR,MAAO,CAAEO,OAAQ,WAEnB,yBAAKH,UAAU,aACb,wBAAIA,UAAU,2BACXP,KAAKP,MAAM0B,SAASP,MADvB,IAC+BZ,KAAKP,MAAM0B,SAASN,OAEnD,wBAAIN,UAAU,sBAAd,WACWP,KAAKP,MAAM0B,SAASJ,UAMvC,yBAAKZ,MAAO,CAAE4B,QAAS,QAAS3B,MAAO,QAASU,MAAO,SACpD,IADH,gBAEe,6BACZd,KAAKP,MAAM0B,SAASa,cAGzB,yBAAK7B,MAAO,CAAEC,MAAO,OAAQ2B,QAAS,OAAQE,UAAW,WACvD,4BACEC,KAAK,SACLC,QAASnC,KAAKoB,UACdb,UAAU,sBAHZ,eAOA,4BAAQ2B,KAAK,SAAS3B,UAAU,mBAC9B,kBAAC,IAAD,CAAMS,GAAG,KAAT,4B,GA5DUC,aC0JPmB,E,2MA1Jb3C,MAAQ,CACNC,IAAK,GACL2C,MAAO,G,EAITC,eAAiB,SAAAjB,GACf1B,MAAM,uCAAD,OAAwC0B,GAAM,CACjDI,OAAQ,WAEP7B,MAAK,SAAA8B,GAAQ,OAAIA,EAAS5B,UAC1BF,MAAK,kBAAM,EAAK2C,wB,EAIrBC,eAAgB,SAACC,EAAOpB,GACtB1B,MAAM,uCAAD,OAAwC0B,GAAM,CACjDI,OAAQ,QACRiB,KAAMC,KAAKC,UAAU,CAAEC,SAAUJ,IACjCK,QAAS,CAAE,eAAgB,sBAC1BlD,MAAK,SAAA8B,GAAQ,OAAIA,EAAS5B,UAC1BF,MAAK,kBAAM,EAAK2C,wB,mFAGA,IAAD,OAClB5C,MAAM,uCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAF,GAAG,OACP,EAAKK,SAAS,CACZL,IAAKA,EACL2C,MAAO3C,EAAIqD,QAAO,SAACV,EAAOnC,GAAR,OAAemC,EAASnC,EAAE2C,SAAW3C,EAAEa,QAAQ,U,+BAK/D,IAAD,OACP,OACE,yBAAKZ,MAAO,CAAEC,MAAO,UACnB,yBAAKG,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,SACf,+BACE,4BACE,wBAAIyC,MAAM,MAAMzC,UAAU,oBACxB,yBAAKA,UAAU,6BAAf,YAIF,wBAAIyC,MAAM,MAAMzC,UAAU,qBACxB,yBAAKA,UAAU,uBAAf,UAEF,wBAAIyC,MAAM,MAAMzC,UAAU,qBACxB,yBAAKA,UAAU,uBAAf,aAEF,wBAAIyC,MAAM,MAAMzC,UAAU,qBACxB,yBAAKA,UAAU,uBAAf,aAKN,+BACGP,KAAKP,MAAMC,IAAIO,KAAI,SAAAC,GAAC,OACnB,wBAAIG,IAAKH,EAAEI,KACT,wBAAI0C,MAAM,MAAMzC,UAAU,YACxB,yBAAKA,UAAU,OACb,yBACEC,IAAKN,EAAEO,IACPL,MAAM,MACNG,UAAU,6BAEZ,yBAAKA,UAAU,oCACb,wBAAIA,UAAU,QACX,IACD,0BAAMA,UAAU,yCACbL,EAAEU,MADL,IACaV,EAAEW,QAIjB,0BAAMN,UAAU,qDACd,yBAAKA,UAAU,KACb,yBAAKA,UAAU,KAAKL,EAAE8B,kBAOhC,wBAAIzB,UAAU,+BACX,IACAL,EAAEa,MAFL,MAKA,wBAAIR,UAAU,gBACZ,2BACEA,UAAU,OACV0C,SAAU,SAACC,GAAD,OAAK,EAAKV,eAAeU,EAAEC,OAAOV,MAAOvC,EAAEI,MACrD4B,KAAK,SACLkB,IAAI,IACJX,MAAOvC,EAAE2C,YAIb,wBAAItC,UAAU,gBACZ,4BACEA,UAAU,MACV4B,QAAS,EAAKG,eAAee,KAAK,EAAMnD,EAAEI,MAF5C,gBAWR,+BACE,4BACE,wBAAIC,UAAU,qDACZ,uCACA,6BACA,2BACEkC,MAAOzC,KAAKP,MAAM4C,MAClB9B,UAAU,uCACV2B,KAAK,SACLoB,UAAQ,IAPZ,MAaF,4BACE,4BACE,4BACEpB,KAAK,SACL3B,UAAU,4CAFZ,WAIU,uBAAGA,UAAU,sC,GA3I9BU,aCmCJsC,E,iLAvBX,OACE,kBAAC,IAAD,KACE,gCACE,oDAAkC,IAClC,kBAAC,IAAD,CAAMvC,GAAG,SACP,uBAAGT,UAAU,gCAEf,kBAAC,IAAD,CAAMS,GAAG,IAAIb,MAAO,CAAE4B,QAAS,WAA/B,SAIF,yBAAKxB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiD,KAAK,IAAIC,OAAK,EAACC,UAAWlE,IACjC,kBAAC,IAAD,CAAOgE,KAAK,eAAeE,UAAWxC,IACtC,kBAAC,IAAD,CAAOsC,KAAK,QAAQE,UAAWtB,W,GAjBnBnB,aCGT0C,MAXf,WACE,OACE,yBAAKpD,UAAU,OAEV,kBAAC,EAAD,MAEH,6DCEcqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxC,MACvB,2D,YCXNyC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,MAAK,SAAA2E,GACjCA,EAAaC,kB","file":"static/js/main.e46482df.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductsList extends Component {\n  state = {\n    arr: []\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/product-listing/\")\n      .then(res => res.json())\n      .then(arr => this.setState({ arr }));\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.arr.map(x => (\n          <div style={{ width: \"400px\" }} key={x._id}>\n            <div className=\"card text-white bg-dark\">\n              <img\n                src={x.img}\n                className=\"card-img-top\"\n                style={{ height: \"300px\" }}\n                alt=\"phonePic\"\n              />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  {x.brand} {x.model}\n                </h5>\n                <p className=\"card-text\">Color: {x.color}</p>\n                <p className=\"card-text\">Price: {x.price} $</p>\n\n                <Link to={`/product/${x._id}`} key={x._id}>\n                  <div className=\"btn btn-primary\">View Phone </div>\n                </Link>\n              </div>\n            </div>\n          </div>\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default ProductsList;\n","import React, { Component, Fragment } from \"react\";\nimport {Link } from \"react-router-dom\";\n\nclass Product extends Component {\n  state = {\n    phoneObj: {}\n  };\n\n  addToCart = () => {\n    const { id } = this.props.match.params;\n    fetch(`http://localhost:5000/shopping-cart/${id}`, {\n      method: \"POST\"\n    })\n      .then(response => response.json())\n      .then(json => console.log(json));\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    fetch(`http://localhost:5000/product-view/${id}`)\n      .then(res => res.json())\n      .then(phoneObj => this.setState({ phoneObj }));\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div style={{ display: \"flex\", justifyContent:'space-evenly', width: \"100%\" }}>\n          \n            <div className=\"col-lg-4  \">\n              <div className=\"card bg-dark text-white w-75 \">\n                <img\n                  className=\"card-img-top\"\n                  src={this.state.phoneObj.img}\n                  alt=\"\"\n                  style={{ height: \"300px\" }}\n                />\n                <div className=\"card-body\">\n                  <h4 className=\"card-title text-center \">\n                    {this.state.phoneObj.brand} {this.state.phoneObj.model}\n                  </h4>\n                  <h6 className=\"font-weight-bolder\">\n                    Price: ${this.state.phoneObj.price}\n                  </h6>\n                </div>\n              </div>\n            </div>\n          \n          <div style={{ padding: \"100px\", width: \"500px\", color: \"#fff\" }}>\n            {\" \"}\n            Description: <br />\n            {this.state.phoneObj.description}\n          </div>\n        </div>\n        <div style={{ width: \"100%\", padding: \"20px\", textAlign: \"center\" }}>\n          <button\n            type=\"button\"\n            onClick={this.addToCart}\n            className=\"btn add btn-danger\"\n          >\n            Add to Cart\n          </button>\n          <button type=\"button\" className=\"btn btn-success\">\n            <Link to=\"/\">Continue Shopping</Link>\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Product;\n","import React, { Component } from \"react\";\n\nclass Cart extends Component {\n  state = {\n    arr: [],\n    total: 0\n    \n  };\n\n  deleteFromCart = id => {\n    fetch(`http://localhost:5000/shopping-cart/${id}`, {\n      method: \"DELETE\"\n    })\n      .then(response => response.json())\n      .then(() => this.componentDidMount());\n      \n  };\n\n  updateQuantity =(value, id) => {\n    fetch(`http://localhost:5000/shopping-cart/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ quantity: value }),\n      headers: { \"Content-Type\": \"application/json\" }\n    }).then(response => response.json())\n      .then(() => this.componentDidMount());\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/shopping-cart\")\n      .then(res => res.json())\n      .then(arr =>\n        this.setState({\n          arr: arr,\n          total: arr.reduce((total, x) => (total += x.quantity * x.price), 0)\n        })\n      );\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"100vw\" }}>\n        <div className=\"py-5\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 p-5 bg-light rounded shadow-lg my-3\">\n                <div className=\"table-responsive\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" className=\"border- bg-light\">\n                          <div className=\"py-2 px-3 text-monospace \">\n                            PRODUCT\n                          </div>\n                        </th>\n                        <th scope=\"col\" className=\"border-5 bg-light\">\n                          <div className=\"py-2 text-monospace\">PRICE</div>\n                        </th>\n                        <th scope=\"col\" className=\"border-5 bg-light\">\n                          <div className=\"py-2 text-monospace\">QUANTITY</div>\n                        </th>\n                        <th scope=\"col\" className=\"border-5 bg-light\">\n                          <div className=\"py-2 text-monospace\">REMOVE</div>\n                        </th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {this.state.arr.map(x => (\n                        <tr key={x._id}>\n                          <th scope=\"row\" className=\"border-0\">\n                            <div className=\"p-2\">\n                              <img\n                                src={x.img}\n                                width=\"100\"\n                                className=\"img-fluid rounded shadow\"\n                              />\n                              <div className=\"ml-3 d-inline-block align-middle\">\n                                <h5 className=\"mb-0\">\n                                  {\" \"}\n                                  <span className=\"text-dark d-inline-block align-middle\">\n                                    {x.brand} {x.model}\n                                  </span>\n                                </h5>\n\n                                <span className=\"text-muted font-weight-normal font-italic d-block\">\n                                  <div className=\"5\">\n                                    <div className=\"1\">{x.description}</div>\n                                  </div>\n                                </span>\n                              </div>\n                            </div>\n                          </th>\n\n                          <td className=\"border-0 align-middle price\">\n                            {\" \"}\n                            {x.price} $\n                          </td>\n\n                          <td className=\"align-middle\">\n                            <input\n                              className=\"w-50\"\n                              onChange={(e)=>this.updateQuantity(e.target.value, x._id)}\n                              type=\"number\"\n                              min=\"1\"\n                              value={x.quantity}\n                            />\n                          </td>\n\n                          <td className=\"align-middle\">\n                            <button\n                              className=\"del\"\n                              onClick={this.deleteFromCart.bind(this, x._id)}\n                            >\n                              delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n\n                    <tbody>\n                      <tr>\n                        <td className=\"font-weight-bolder text-uppercase text-monospace \">\n                          <span>total</span>\n                          <br />\n                          <input\n                            value={this.state.total}\n                            className=\"w-50 rounded-top-sm text-right total\"\n                            type=\"number\"\n                            disabled\n                          />\n                          $\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <td>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-success w-25 font-weight-bolder \"\n                          >\n                            Payment <i className=\"far fa-credit-card\"></i>\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n \n} from \"react-router-dom\";\nimport ProductsList from \"./ProductsList\";\nimport Product from \"./Product\";\nimport Cart from \"./Cart\";\n\nclass Container extends Component {\n  render() {\n    return (\n      <Router>\n        <header>\n          <strong>HandiPhone eShop</strong>{\" \"}\n          <Link to=\"/cart\">\n            <i className=\"fas fa-shopping-cart fa-2x\"></i>\n          </Link>\n          <Link to=\"/\" style={{ padding: \"0 50px\" }}>\n            Home\n          </Link>\n        </header>\n        <div className=\"box\">\n          <Switch>\n            <Route path=\"/\" exact component={ProductsList} />\n            <Route path=\"/product/:id\" component={Product} />\n            <Route path=\"/cart\" component={Cart} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport './App.css';\nimport Container from './components/Container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       \n         <Container />\n       \n      <footer>Tareq Almasri &copy; 2019</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}